{"remainingRequest":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\src\\components\\Header.vue?vue&type=style&index=0&id=61dd7a3d&scoped=true&lang=css","dependencies":[{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\src\\components\\Header.vue","mtime":1747487445900},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746972278627},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1746972280038},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1746972279207},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746972278158},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1746972279591}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbC1kcm9wZG93bi1saW5rIHsKICBsaW5lLWhlaWdodDogNTBweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgY29sb3I6IHZhcigtLWVsLWNvbG9yLXByaW1hcnkpOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmVsLWRyb3Bkb3duIHsKICBib3JkZXI6IG5vbmU7CiAgYm94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwgMCwgMCwgMC4xKTsKfQoKLmVsLWRyb3Bkb3duLWxpbmsgewogIGJvcmRlcjogbm9uZTsKICBvdXRsaW5lOiBub25lOwp9Cg=="},{"version":3,"sources":["Header.vue"],"names":[],"mappings":";AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Header.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div style=\"height: 50px; line-height: 50px; border-bottom: 1px solid #ccc; display:flex;\" >\n    <div style=\"width: 200px; padding-left: 30px; font-weight: bold;color: dodgerblue \">\n      <el-select v-model=\"currentLang\" size=\"small\" @change=\"handleLanguageChange\" style=\"width: 100px;\">\n        <el-option\n          v-for=\"item in languages\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\">\n        </el-option>\n      </el-select>\n    </div>\n    <div style=\"flex: 1\"></div>\n    <div style=\"width: 150px; display: flex; align-items: center; justify-content: flex-end;\">\n      <template v-if=\"user\">\n        <el-dropdown @command=\"handleCommand\">\n          <span class=\"el-dropdown-link\">\n            <el-avatar :size=\"30\" :src=\"user.avatar\" style=\"margin-right: 10px;\">\n              <img v-if=\"!user.avatar\" :src=\"defaultAvatar\" alt=\"\"/>\n            </el-avatar>\n            {{ user.nickName }}\n            <i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"person\">{{ $t('header.personInfo') }}</el-dropdown-item>\n            <el-dropdown-item command=\"logout\">{{ $t('header.logout') }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </template>\n      <template v-else>\n        <el-button type=\"primary\" @click=\"$router.push('/login')\">{{ $t('header.login') }}</el-button>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Header',\n  props: {\n    user: {\n      type: Object,\n      default: null\n    }\n  },\n  data() {\n    return {\n      defaultAvatar: require('@/assets/default-avatar.png'),\n      currentLang: 'zh',\n      languages: [\n        { value: 'zh', label: '中文' },\n        { value: 'en', label: 'English' }\n      ]\n    }\n  },\n  created() {\n    console.log('Header组件创建，用户信息:', this.user)\n    // 从localStorage获取保存的语言设置\n    const savedLang = localStorage.getItem('language')\n    if (savedLang) {\n      this.currentLang = savedLang\n      this.$i18n.locale = savedLang\n    }\n  },\n  watch: {\n    user: {\n      handler(newVal) {\n        console.log('Header组件用户信息变化:', newVal)\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    handleCommand(command) {\n      console.log('下拉菜单命令:', command)\n      if (command === 'person') {\n        this.handlePersonClick()\n      } else if (command === 'logout') {\n        this.handleLogoutClick()\n      }\n    },\n    handlePersonClick() {\n      console.log('点击个人信息按钮')\n      if (!this.user) {\n        console.log('用户未登录')\n        this.$message.warning('请先登录')\n        this.$router.push('/login')\n        return\n      }\n      console.log('准备跳转到个人信息页面')\n      this.$router.push('/person').catch(err => {\n        console.error('路由跳转失败:', err)\n      })\n    },\n    handleLogoutClick() {\n      // 清除用户信息\n      sessionStorage.removeItem(\"user\")\n      this.$message.success('退出成功')\n      this.$router.push('/login')\n    },\n    handleLanguageChange(lang) {\n      // 保存语言设置到localStorage\n      localStorage.setItem('language', lang)\n      // 更新i18n的语言设置\n      this.$i18n.locale = lang\n      // 显示切换成功提示\n      this.$message.success(lang === 'zh' ? '已切换到中文' : 'Switched to English')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-dropdown-link {\n  line-height: 50px;\n  cursor: pointer;\n  color: var(--el-color-primary);\n  display: flex;\n  align-items: center;\n}\n\n.el-dropdown {\n  border: none;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.el-dropdown-link {\n  border: none;\n  outline: none;\n}\n</style>"]}]}