{"remainingRequest":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\src\\views\\admin\\Dashboard.vue?vue&type=style&index=0&id=1811d28a&scoped=true&lang=css","dependencies":[{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\src\\views\\admin\\Dashboard.vue","mtime":1746964290964},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746972278627},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1746972280038},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1746972279207},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746972278158},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1746972279591}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouZGFzaGJvYXJkIHsNCiAgcGFkZGluZzogMjBweDsNCiAgaGVpZ2h0OiAxMDAlOw0KfQ0KDQouZGF0YS1vdmVydmlldyB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5jYXJkLWhlYWRlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg0KLmhlYWRlci1hY3Rpb25zIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZ2FwOiAxMHB4Ow0KfQ0KDQouY2hhcnQtY29udGFpbmVyIHsNCiAgaGVpZ2h0OiA0MDBweDsNCiAgd2lkdGg6IDEwMCU7DQp9DQoNCi5jaGFydC1yb3cgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQoucmVjZW50LWNvbW1lbnRzIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLnJlY2VudC1oZWFkZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQoNCi5jb21tZW50LWNvbnRlbnQgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBnYXA6IDEwcHg7DQp9DQoNCi5lbC10YWcgew0KICBtYXJnaW4tbGVmdDogOHB4Ow0KfQ0KDQouZWwtY2FyZCB7DQogIGhlaWdodDogMTAwJTsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLmVsLWNhcmRfX2JvZHkgew0KICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDU1cHgpOw0KICBwYWRkaW5nOiAyMHB4Ow0KfQ0K"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";AAqTA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <el-loading :fullscreen=\"true\" text=\"加载中...\"></el-loading>\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <!-- 关键词分析卡片 -->\r\n      <el-row :gutter=\"20\" class=\"data-overview\">\r\n        <el-col :span=\"12\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <div slot=\"header\" class=\"card-header\">\r\n              <span>热门关键词</span>\r\n              <el-select v-model=\"selectedProduct\" placeholder=\"选择商品\" clearable @change=\"loadKeywordData\">\r\n                <el-option\r\n                  v-for=\"item in productList\"\r\n                  :key=\"item.id\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :options=\"keywordOptions\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-card shadow=\"hover\" class=\"data-card\">\r\n            <div slot=\"header\" class=\"card-header\">\r\n              <span>关键词趋势</span>\r\n              <el-radio-group v-model=\"trendTimeRange\" size=\"small\" @change=\"loadKeywordTrend\">\r\n                <el-radio-button label=\"week\">本周</el-radio-button>\r\n                <el-radio-button label=\"month\">本月</el-radio-button>\r\n              </el-radio-group>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :options=\"keywordTrendOptions\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 评论质量分析 -->\r\n      <el-row :gutter=\"20\" class=\"chart-row\">\r\n        <el-col :span=\"24\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\" class=\"card-header\">\r\n              <span>评论质量分析</span>\r\n              <div class=\"header-actions\">\r\n                <el-select v-model=\"qualityMetric\" placeholder=\"选择指标\" @change=\"loadQualityData\">\r\n                  <el-option label=\"评论长度分布\" value=\"length\"></el-option>\r\n                  <el-option label=\"评论情感分布\" value=\"sentiment\"></el-option>\r\n                  <el-option label=\"评论时效性\" value=\"timeliness\"></el-option>\r\n                </el-select>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <v-chart :options=\"qualityOptions\" autoresize />\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 最新评论 -->\r\n      <el-card class=\"recent-comments\">\r\n        <div slot=\"header\" class=\"recent-header\">\r\n          <span>最新评论</span>\r\n          <el-button type=\"text\" @click=\"$router.push('/admin/comments')\">查看更多</el-button>\r\n        </div>\r\n        <el-table :data=\"recentComments\" style=\"width: 100%\" v-loading=\"loading\">\r\n          <el-table-column prop=\"content\" label=\"评论内容\" min-width=\"300\" show-overflow-tooltip>\r\n            <template slot-scope=\"scope\">\r\n              <div class=\"comment-content\">\r\n                <span>{{ scope.row.content }}</span>\r\n                <el-tag size=\"mini\" type=\"info\" v-if=\"scope.row.keywords\">\r\n                  {{ scope.row.keywords.join(', ') }}\r\n                </el-tag>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"productName\" label=\"商品\" width=\"150\"></el-table-column>\r\n          <el-table-column prop=\"createTime\" label=\"时间\" width=\"180\"></el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport VChart from 'vue-echarts';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: {\r\n    VChart\r\n  },\r\n  data() {\r\n    console.log('Dashboard data initialized');\r\n    return {\r\n      loading: false,\r\n      selectedProduct: '',\r\n      trendTimeRange: 'week',\r\n      qualityMetric: 'length',\r\n      productList: [],\r\n      recentComments: [],\r\n      keywordOptions: {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        series: [{\r\n          name: '出现频次',\r\n          type: 'bar',\r\n          data: []\r\n        }]\r\n      },\r\n      keywordTrendOptions: {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: []\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: []\r\n      },\r\n      qualityOptions: {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          right: 10,\r\n          top: 'center'\r\n        },\r\n        series: [{\r\n          type: 'pie',\r\n          radius: ['50%', '70%'],\r\n          avoidLabelOverlap: false,\r\n          label: {\r\n            show: false\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: '20',\r\n              fontWeight: 'bold'\r\n            }\r\n          },\r\n          data: []\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    console.log('Dashboard created');\r\n    // 初始化 echarts\r\n    echarts.init(document.createElement('div'));\r\n    this.loadProductList();\r\n    this.loadDashboardData();\r\n  },\r\n  mounted() {\r\n    console.log('Dashboard mounted');\r\n  },\r\n  beforeDestroy() {\r\n    console.log('Dashboard beforeDestroy');\r\n  },\r\n  watch: {\r\n    selectedProduct() {\r\n      this.loadKeywordData();\r\n      this.loadKeywordTrend();\r\n      this.loadQualityData();\r\n    }\r\n  },\r\n  methods: {\r\n    async loadProductList() {\r\n      try {\r\n        console.log('开始加载商品列表');\r\n        const response = await axios.get('/products/list');\r\n        console.log('商品列表响应:', response.data);\r\n        if (response.data.code === '0') {\r\n          this.productList = response.data.data;\r\n          console.log('商品列表加载成功:', this.productList);\r\n        } else {\r\n          console.error('商品列表加载失败:', response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('加载商品列表失败:', error);\r\n        this.$message.error('加载商品列表失败: ' + error.message);\r\n      }\r\n    },\r\n    async loadDashboardData() {\r\n      this.loading = true;\r\n      try {\r\n        console.log('开始加载仪表盘数据');\r\n        \r\n        const response = await axios.get('/admin/recent-comments');\r\n        console.log('最新评论数据:', response.data);\r\n        if (response.data.code === '0') {\r\n          this.recentComments = response.data.data;\r\n        }\r\n\r\n        await this.loadKeywordData();\r\n        await this.loadKeywordTrend();\r\n        await this.loadQualityData();\r\n      } catch (error) {\r\n        console.error('加载仪表盘数据失败:', error);\r\n        this.$message.error('加载仪表盘数据失败: ' + error.message);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async loadKeywordData() {\r\n      try {\r\n        console.log('开始加载关键词分析数据');\r\n        const response = await axios.get('/admin/keyword-analysis', {\r\n          params: { productId: this.selectedProduct }\r\n        });\r\n        console.log('关键词分析数据:', response.data);\r\n        if (response.data.code === '0') {\r\n          const { keywords, frequencies } = response.data.data;\r\n          this.keywordOptions.yAxis.data = keywords;\r\n          this.keywordOptions.series[0].data = frequencies;\r\n        }\r\n      } catch (error) {\r\n        console.error('加载关键词分析失败:', error);\r\n        this.$message.error('加载关键词分析失败: ' + error.message);\r\n      }\r\n    },\r\n    async loadKeywordTrend() {\r\n      try {\r\n        console.log('开始加载关键词趋势数据');\r\n        const response = await axios.get('/admin/keyword-trend', {\r\n          params: { \r\n            timeRange: this.trendTimeRange,\r\n            productId: this.selectedProduct\r\n          }\r\n        });\r\n        console.log('关键词趋势数据:', response.data);\r\n        if (response.data.code === '0') {\r\n          const { dates, keywords, trends } = response.data.data;\r\n          this.keywordTrendOptions.xAxis.data = dates;\r\n          this.keywordTrendOptions.legend.data = keywords;\r\n          this.keywordTrendOptions.series = keywords.map(keyword => ({\r\n            name: keyword,\r\n            type: 'line',\r\n            smooth: true,\r\n            data: trends[keyword]\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        console.error('加载关键词趋势失败:', error);\r\n        this.$message.error('加载关键词趋势失败: ' + error.message);\r\n      }\r\n    },\r\n    async loadQualityData() {\r\n      try {\r\n        console.log('开始加载质量分析数据');\r\n        const response = await axios.get('/admin/quality-analysis', {\r\n          params: { \r\n            metric: this.qualityMetric,\r\n            productId: this.selectedProduct\r\n          }\r\n        });\r\n        console.log('质量分析数据:', response.data);\r\n        if (response.data.code === '0') {\r\n          this.qualityOptions.series[0].data = response.data.data;\r\n        }\r\n      } catch (error) {\r\n        console.error('加载质量分析失败:', error);\r\n        this.$message.error('加载质量分析失败: ' + error.message);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  padding: 20px;\r\n  height: 100%;\r\n}\r\n\r\n.data-overview {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.chart-container {\r\n  height: 400px;\r\n  width: 100%;\r\n}\r\n\r\n.chart-row {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.recent-comments {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.recent-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.comment-content {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.el-tag {\r\n  margin-left: 8px;\r\n}\r\n\r\n.el-card {\r\n  height: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-card__body {\r\n  height: calc(100% - 55px);\r\n  padding: 20px;\r\n}\r\n</style> "]}]}