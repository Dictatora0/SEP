{"remainingRequest":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\src\\views\\Person.vue?vue&type=style&index=0&id=45bdfb8f&scoped=true&lang=css","dependencies":[{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\src\\views\\Person.vue","mtime":1747020551390},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746972278627},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1746972280038},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1746972279207},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746972278158},{"path":"D:\\学习资料\\软件工程\\demo2\\CommentAnalysor_frontend\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1746972279591}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucGVyc29uIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoNCi5hdmF0YXItdXBsb2FkZXIgPj4+IC5lbC11cGxvYWQgew0KICBib3JkZXItcmFkaXVzOiA1MCU7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCg0KLmF2YXRhci11cGxvYWRlciA+Pj4gLmVsLXVwbG9hZDpob3ZlciB7DQogIGJvcmRlci1jb2xvcjogIzQwOUVGRjsNCn0NCg=="},{"version":3,"sources":["Person.vue"],"names":[],"mappings":";AAqHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Person.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"person\">\r\n    <el-card style=\"width: 40%;margin: 10px\">\r\n      <div style=\"text-align: center; margin-bottom: 20px\">\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"http://localhost:8080/files/upload\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n        >\r\n          <el-avatar :size=\"100\" :src=\"form.avatar\">\r\n            <img :src=\"defaultAvatar\" v-if=\"!form.avatar\" alt=\"\"/>\r\n          </el-avatar>\r\n        </el-upload>\r\n      </div>\r\n      <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"form.username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"昵称\">\r\n          <el-input v-model=\"form.nickName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\">\r\n          <el-input v-model=\"form.age\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\">\r\n          <el-input v-model=\"form.gender\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\">\r\n          <el-input v-model=\"form.address\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"form.password\" show-password></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align: center\">\r\n        <el-button type=\"primary\" @click=\"update\">确定</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"../utils/request\";\r\n\r\nexport default {\r\n  name: 'Person',\r\n  data() {\r\n    return {\r\n      form: {},\r\n      defaultAvatar: require('@/assets/default-avatar.png')\r\n    }\r\n  },\r\n  created() {\r\n    let str = sessionStorage.getItem(\"user\") || \"{}\";\r\n    this.form = JSON.parse(str);\r\n  },\r\n  methods: {\r\n    handleAvatarSuccess(res) {\r\n      if (res.code === '0') {\r\n        this.form.avatar = res.data; // 更新头像路径\r\n      }\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isImage = file.type.startsWith('image/');\r\n      const isLt2M = file.size / 1024 / 1024 < 5;\r\n      if (!isImage) this.$message.error('只能上传图片格式!');\r\n      if (!isLt2M) this.$message.error('图片大小不能超过5MB!');\r\n      return isImage && isLt2M;\r\n    },\r\n    update() {\r\n      const user = JSON.parse(sessionStorage.getItem('user') || '{}');\r\n      if(user.role === 'user'){\r\n        request.put('/user', this.form).then((res) => {\r\n          console.log(res)\r\n          if (res.code === '0') {\r\n            this.$message({\r\n              type: 'success',\r\n              message: \"更新成功\"\r\n            })\r\n            sessionStorage.setItem(\"user\", JSON.stringify(this.form));\r\n            this.$router.push('/');\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: res.data.msg\r\n            })\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        request.put('/admin/update', this.form).then((res) => {\r\n          console.log(res)\r\n          if (res.code === '0') {\r\n            this.$message({\r\n              type: 'success',\r\n              message: \"更新成功\"\r\n            })\r\n            sessionStorage.setItem(\"user\", JSON.stringify(this.form));\r\n            this.$router.push('/admin/dashboard');\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: res.data.msg\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n      \r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.person {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px;\r\n}\r\n\r\n.avatar-uploader >>> .el-upload {\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n}\r\n\r\n.avatar-uploader >>> .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n</style>"]}]}